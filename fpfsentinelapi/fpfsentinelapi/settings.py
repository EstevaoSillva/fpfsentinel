"""
Django settings for fpfsentinelapi project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=*(01@%b-a@*rwx)%ztvne720=u(&ci=u-_i*ugi#zi*l22ui!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'core',
    'minio_storage',
]

MIDDLEWARE = [

    'corsheaders.middleware.CorsMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',  // desabilitado para testes

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fpfsentinelapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fpfsentinelapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  
        'NAME': "fpf_sentinel_api",                     
        'USER': "postgres",                  
        'PASSWORD': "postgres",             
        'HOST': 'localhost',                         
        'PORT': '5432',                             
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'core.GuardPost'  # Define o modelo de usuário padrão para GuardPost

CORS_ALLOWED_ORIGINS = [
    'http://localhost:4200',  # Angular
    "http://localhost:8000",  # Django
    "http://127.0.0.1:8000",  # Django
]

CORS_ALLOW_CREDENTIALS = True  # Permite credenciais
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
] # Métodos permitidos

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:4200",
]  # Libera CSRF para essa URL

CORS_ALLOW_HEADERS = [
    'Authorization',
    'content-type',
    'accept',
    'origin',
    'x-csrftoken',
    'x-requested-with',
    'x-www-form-urlencoded',
] # Headers permitidos


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),  # 1 hora
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),   # 1 dia
    'ROTATE_REFRESH_TOKENS': True,  # Gera novos tokens ao usar refresh
    'BLACKLIST_AFTER_ROTATION': True,  # Blacklist para tokens antigos
}


# # Configurações do MinIO
# MINIO_STORAGE_ENDPOINT = 'seu_endpoint_minio:9000' # Ex: 'minio.exemplo.com:9000'
# MINIO_STORAGE_ACCESS_KEY = 'sua_chave_acesso'
# MINIO_STORAGE_SECRET_KEY = 'sua_chave_secreta'
# MINIO_STORAGE_USE_HTTPS = False  # Ou True, dependendo da sua configuração
# MINIO_STORAGE_MEDIA_BUCKET_NAME = 'media'  # Nome do bucket para arquivos de mídia
# MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET = True  # Cria o bucket automaticamente
# MINIO_STORAGE_STATIC_BUCKET_NAME = 'static'  # Nome do bucket para arquivos estáticos
# MINIO_STORAGE_AUTO_CREATE_STATIC_BUCKET = True  # Cria o bucket automaticamente

# Configurações de armazenamento de arquivos
# DEFAULT_FILE_STORAGE = 'minio_storage.storage.MinioMediaStorage'
# STATICFILES_STORAGE = 'minio_storage.storage.MinioStaticStorage'

# # URL base para arquivos de mídia e estáticos
# MEDIA_URL = f"https://{MINIO_STORAGE_ENDPOINT}/{MINIO_STORAGE_MEDIA_BUCKET_NAME}/"
# STATIC_URL = f"https://{MINIO_STORAGE_ENDPOINT}/{MINIO_STORAGE_STATIC_BUCKET_NAME}/"