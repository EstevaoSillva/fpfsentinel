# Generated by Django 5.2 on 2025-04-14 03:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='modified_at')),
                ('activate', models.BooleanField(db_column='activate', default=True)),
                ('name_employee', models.CharField(db_column='name', max_length=100, verbose_name='Nome do Colaborador')),
                ('cpf_employee', models.CharField(db_column='cpf_employee', max_length=11, verbose_name='CPF Colaborador')),
                ('registration_employee', models.CharField(db_column='registration_employee', max_length=20, verbose_name='Matrícula Colaborador')),
                ('sector_employee', models.CharField(db_column='sector_employee', max_length=40, verbose_name='Setor Colaborador')),
                ('position_employee', models.CharField(db_column='position_employee', max_length=40, verbose_name='Cargo Colaborador')),
                ('leaving_employee', models.BooleanField(choices=[('PERSONAL', 'Pessoal'), ('TECHNICAL_VISIT', 'Visita Técnica'), ('DEPARTURE_LUNCH', 'Saída para Almoço'), ('END_SHIFT', 'Fim de Turno'), ('OTHER', 'Outro')], default='PERSONAL', max_length=20, verbose_name='Motivo de Saída')),
            ],
            options={
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='modified_at')),
                ('activate', models.BooleanField(db_column='activate', default=True)),
                ('name_visitor', models.CharField(db_column='name', max_length=100)),
                ('cpf_visitor', models.CharField(db_column='cpf_visitor', max_length=11, verbose_name='CPF Visitante')),
                ('cnpj_visitor', models.CharField(db_column='cnpj_visitor', max_length=14, verbose_name='CNPJ Visitante')),
                ('reason_visit', models.CharField(db_column='reason_visit', max_length=200, verbose_name='Motivo da Visita')),
                ('place_visit', models.CharField(db_column='place_visit', max_length=200, verbose_name='Local da Visita')),
            ],
            options={
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GuardPost',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='modified_at')),
                ('activate', models.BooleanField(db_column='activate', default=True)),
                ('first_name', models.CharField(db_column='name', max_length=100)),
                ('last_name', models.CharField(db_column='last_name', max_length=100)),
                ('registration_guard_post', models.CharField(db_column='registration_guard_post', max_length=20, verbose_name='Matrícula do Colaborador')),
                ('shift_guard_post', models.CharField(choices=[('MORNING', 'Matutino'), ('AFTERNOON', 'Vespertino'), ('NIGHT', 'Noturno'), ('FULL_TIME', 'Integral')], default='FULL_TIME', max_length=20, verbose_name='Turno do Colaborador')),
                ('email', models.EmailField(db_column='email', max_length=100, unique=True, verbose_name='Email do Colaborador')),
                ('password', models.CharField(db_column='password', max_length=128, verbose_name='Senha do Colaborador')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccessRegister',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='modified_at')),
                ('activate', models.BooleanField(db_column='activate', default=True)),
                ('person_type', models.CharField(choices=[('COLABORATOR', 'Colaborador'), ('VISITOR_PF', 'Visitante - Pessoa Física'), ('VISITOR_PJ', 'Visitante - Pessoa Jurídica')], default='COLABORATOR', max_length=20, verbose_name='Tipo de Pessoa')),
                ('date_visitation', models.DateTimeField(db_column='date_visit', verbose_name='core.date_visit')),
                ('id_guard_post', models.ForeignKey(db_column='id_guard_post', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_employee', models.ForeignKey(blank=True, db_column='id_employee', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
                ('id_visitor', models.ForeignKey(blank=True, db_column='id_visitor', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.visitor')),
            ],
            options={
                'abstract': False,
                'managed': True,
            },
        ),
    ]
